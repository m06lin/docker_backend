version: '3'
services:
  php-fpm:
    build: ./Docker/php74
    volumes: 
      - ./php:/var/www/html
    restart: always  
    networks:
      - "backend"

  php8-fpm:
    build: ./Docker/php80
    volumes: 
      - ./php:/var/www/html
    restart: always  
    networks:
      - "backend"

  php81-fpm:
    build: ./Docker/php81
    volumes: 
      - ./php:/var/www/html
    restart: always  
    networks:
      - "backend"

  nginx:
    # image: nginx:1.22
    build:
      context: ./nginx
      args:
          - CHANGE_SOURCE=false
          - PHP_UPSTREAM_CONTAINER=php-fpm
          - PHP_UPSTREAM_PORT=9000
          - http_proxy
          - https_proxy
          - no_proxy
    volumes: 
      - ./php:/var/www/html
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - "backend"

  # nodejs:
  #   image: node:lts
  #   # build: ./Docker/node/
  #   volumes: 
  #     - ./php:/var/www/html
  #   restart: always  
  #   tty: true 
  #   expose:
  #     - "3000"
  #     - "8080"
  #     - "9487"
  #   working_dir: /var/www/html
  #   networks:
  #     - "backend"

  # apache:
  #   image: httpd:alpine3.16
  #   volumes: 
  #     - ./php:/var/www/html
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #   restart: always
  #   ports:
  #     - "80:80"
  #   networks:
  #     - "backend" 

  # sonarqube:
  #   image: sonarqube:lts
  #   platform: linux/amd64
  #   depends_on:
  #     - mysql
  #   environment:
  #     SONARQUBE_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
  #     SONARQUBE_JDBC_USERNAME: root
  #     SONARQUBE_JDBC_PASSWORD: root
  #   volumes:
  #     - sonarqube_data:/opt/sonarqube/data
  #     - sonarqube_extensions:/opt/sonarqube/extensions
  #     - sonarqube_logs:/opt/sonarqube/logs
  #   ports:
  #     - "9000:9000"
  #   networks:
  #     - "backend"

  # gitlab-runner:
  #   image: gitlab/gitlab-runner:latest
  #   volumes: 
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - gitlab-runner-config:/etc/gitlab-runner
  #   restart: always
  #   networks:
  #     - "backend"

  mysql:
    image: mysql:5.7
    platform: linux/amd64
    volumes:
      - mysql57:/var/lib/mysql
      - ./config/db_seed/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      # MYSQL_USER: root
      # MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    networks:
      - "backend"

  # postgres:
  #   image: postgres:12
  #   environment:
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: root
  #   volumes:
  #     - postgresql:/var/lib/postgresql
  #     - postgresql_data:/var/lib/postgresql/data
  #   networks:
  #     - "backend"

volumes:
  mysql57:
  postgresql:
  postgresql_data:
  gitlab-runner-config:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

networks:
  backend:
    # name: "backend"